/*这个程序只是让Thedraw.cpp结构分得更清,添加了一个函数solve！*/
#include<cstdio>
#include<algorithm>
using namespace std;
const int MAX_N = 1000;
int n, m, k[MAX_N];

bool
binary_search (int x)
{
  //x的存在范围是k[l],k[l+1],...,k[r-1]
  int l = 0, r = n;			//l 表示left，r表示right
  //反复操作直到存在范围为空
  while (r - l >= 1)
    {
      int i = (l + r) / 2;
      if (k[i] == x)
	return true;
      else if (k[i] < x)
	l = i + 1;
      else
	r = i;
    }
  //没找到x
  return false;
}

void
solve ()
{
  //为了执行二分查找需要先排序
  for (int a = 0; a < n; a++)
	  printf("%d ",k[a]);
  printf("\n");
  sort (k, k + n);
//是否找到和为m的组合的标记
  bool f = false;
//通过四重循环枚举所有方案
  for (int a = 0; a < n; a++)
    {
      for (int b = 0; b < n; b++)
	{
	  for (int c = 0; c < n; c++)
	    {
	      if (binary_search (m - k[a] - k[b] - k[c]))
		{
		  f = true;
	      printf("%d+%d+%d+%d=%d\n", k[a] , k[b] , k[c],m-k[a]-k[b]-k[c],m);
		}
	    }
	}
    }

//输出到标准输出
  if (f)
    puts ("Yes");
  else
    puts ("No");
}

int
main ()
{
//从标准输入读入
  scanf ("%d %d", &n, &m);
  for (int i = 0; i < n; i++)
    {
      scanf ("%d", &k[i]);
    }
  solve ();

  return 0;
}
